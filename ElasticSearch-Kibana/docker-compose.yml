version: '3.4'
services:
  mongo:
    image: mongo
    restart: always
    container_name: 'mongo_porus'
    hostname: mongodb
    environment:
      #      MONGO_INITDB_DATABASE: porus
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 1234
      MONGO_REPLICA_SET_NAME: rs0
    healthcheck:
      test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongo -u root -p 1234 --quiet) -eq 1
      interval: 10s
      start_period: 30s
    ports:
      - '27017-27019:27017-27019'
    networks:
      - elastic


  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.0
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - elastic

  kib01:
    image: docker.elastic.co/kibana/kibana:7.9.0
    container_name: kib01
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: http://es01:9200
    networks:
      - elastic

  elastic-ui:
    image:  elastichq/elasticsearch-hq
    container_name: elastichq-ui
    ports:
      - 5000:5000
    networks:
      - elastic

networks:
  elastic:
    driver: bridge
